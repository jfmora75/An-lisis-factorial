#package needed.
ipak <- function(pkg){
  new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
  if (length(new.pkg)) 
    install.packages(new.pkg, dependencies = TRUE)
  sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("parameters","apa","haven", "paran", "openxlsx", "EFAtools", "ggplot2","ggpubr","gridExtra","apaTables", "reshape", "GPArotation", "mvtnorm", "psych", "psychometric", "lavaan", "nFactors", "semPlot", "lavaan", "MVN", "semTools")
ipak(packages)

#Abrir base de datos
SAP <- read.xlsx('SAP.xlsx')
"""SAP38 = SAP[, 1:38]"""

"""#Segmentar base de datos EN CASO DE TENER UNA MUESTRA LO SUFICIENTEMENTE GRANDE
set.seed(1234)
ind <- sample(2, nrow(SAP), replace = TRUE, prob = c(0.5, 0.5))
AFE <- SAP38[ind == 1, ]
AFC <- SAP38[ind == 2, ] """

#ANALISIS EXPLORATORIO
#Adecuacion de los datos
KMO(SAP) 
BARTLETT(SAP, use = c("all.obs"), cor_method = c("pearson")) 

#Analisis paralelo
paran(SAP, 
      iterations = 2000, 
      centile = 99, 
      quietly = FALSE, 
      status = TRUE,
      all = TRUE,
      cfa = FALSE,
      graph = TRUE,
      color = TRUE,
      col = c("black", "red", "blue"),
      lty=c(1,2,3),
      seed = 1995)

#Analisis factorial
SAPfactor<-fa(SAP,
              nfactors = 3,
              fm = "ml", 
              residual = TRUE, 
              max.iter = "2000", 
              rotate ="oblimin",
              cor = "cor", 
              warnings = TRUE,
              alpha = .05,
              p = .95,
              oblique.scores = TRUE)

print(SAPfactor,digits = 4,cut = .40,sort=TRUE)
fa.diagram(SAPfactor)

#CONFIABILIDAD
#CreaciÃ³n de dimensiones
f1 <- SAP[ , c("B13.SE", "B34.SE", "B41.SE", "B5.SM", 
                  "B45.SE", "B20.SE", "B27.SE", 
                  "B6.SE", "B33.SM", "B50.SE", "B40.SM", 
                  "B7.SC", "B12.SM", "B21.SC",
               "B42.SC", "B49.SC")]

f2 <- SAP[ , c("B38.MF", "B31.MF", "B24.MF", "B44.MF",
               "B32.CF", "B10.MF", "B39.CF", "B4.MF",
               "B3.MF", "B18.CF", "B17.MF")]

f3 <- SAP[ , c("B9.VS", "B2.VS", "B23.VS", "B37.VS",
               "B30.VS", "B16.VS", "B8.SF",
               "B19.SM", "B43.VS", "B36.SF")]

#Alfa de cronbach
alpha(f1) #FACTOR 1
alpha(f2) #FACTOR 2
alpha(f3) #FACTOR 3
alpha(SAP) #ESCALA TOTAL

#Coeficiente omega
omega(f1)
omega(f2)
omega(f3)
omega(SAP)
sink()

#ANALISIS FACTORIAL CONFIRMATORIO
#Modelo con 38 reactivos """al ser un ejemplo propio, probamos con modelos con diferente numero de reactivos"""
TREINTAYOCHOfactor<-'SP =~ B13.SE + B34.SE + B41.SE + B45.SE + B20.SE + B33.SM + B6.SE + B5.SM + B27.SE + B7.SC + B50.SE + B28.SC + B12.SM + B42.SC + B21.SC + B40.SM + B49.SC 
SF =~ B9.VS + B2.VS + B37.VS + B23.VS + B16.VS + B30.VS + B8.SF + B19.SM + B36.SF + B43.VS 
FF =~ B38.MF + B31.MF + B24.MF + B10.MF + B32.CF + B3.MF + B39.CF + B44.MF + B17.MF+ B4.MF + B18.CF'

AFC38 <- cfa(TREINTAYOCHOfactor,orthogonal=FALSE, data=SAP38, estimator="ULSMVS",ordered =names(AFC))
AFC38 <- cfa(TREINTAYOCHOfactor,orthogonal=FALSE, estimator="MLM", data=AFC)
summary(AFC38, fit.measures=TRUE)
fitMeasures(DATA2)
semPaths(CFA38, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")

#Visualizar Indices de Modificacion
modindices(AFC38, sort = TRUE, maximum.number = 50)

#Parametros estandarizados
standardizedSolution(AFC38, type = "std.all", se = TRUE, zstat = TRUE, 
                     pvalue = TRUE, ci = TRUE, level = 0.95, cov.std = TRUE, 
                     remove.eq = TRUE, remove.ineq = TRUE, remove.def = FALSE, 
                     partable = NULL, GLIST = NULL, est = NULL,
                     output = "data.frame")
#Residuales
lavResiduals(AFC38, type = "cor", custom.rmr = NULL,
             se = TRUE, zstat = TRUE, summary = TRUE, h1.acov = "unstructured",
             add.type = TRUE, add.labels = TRUE, add.class = TRUE,
             drop.list.single.group = TRUE,
             maximum.number = length(res.vech), output = "list")

"""#Modelo con 18 reactivos
DIECIOCHOfactor<-'SP =~ B13.SE + B34.SE + B41.SE + B5.SM + B45.SE + B20.SE
SF =~ B9.VS+ B23.VS + B16.VS + B2.VS + B30.VS + B37.VS
FF =~ B38.MF + B31.MF + B24.MF + B44.MF + B10.MF + B4.MF'

AFC18 <- cfa(DIECIOCHOfactor,orthogonal=FALSE, data=AFC, estimator="ULSMV",ordered =names(AFC))
AFC18 <- cfa(DIECIOCHOfactor,orthogonal=FALSE, estimator="MLM", data=AFC)
summary(AFC18, fit.measures=TRUE)
fitMeasures(AFC18)
semPaths(AFC18, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="tree")

modindices(AFC18, sort = TRUE, maximum.number = 50)

standardizedSolution(AFC18, type = "std.all", se = TRUE, zstat = TRUE, 
                     pvalue = TRUE, ci = TRUE, level = 0.95, cov.std = TRUE, 
                     remove.eq = TRUE, remove.ineq = TRUE, remove.def = FALSE, 
                     partable = NULL, GLIST = NULL, est = NULL,
                     output = "data.frame")

#Modelo con 12 reactivos
DOCEfactor<-'SP =~ B34.SE + B13.SE + B41.SE + B5.SM  
SF =~ B9.VS + B23.VS + B16.VS + B37.VS
FF =~ B31.MF + B44.MF + B38.MF + B24.MF'

#Resultados
AFC12 <- cfa(DOCEfactor,orthogonal=FALSE, data=SAP38, estimator="ULSMVS",ordered =names(SAP12))
AFC12 <- cfa(DOCEfactor,orthogonal=FALSE, estimator="MLM", data=AFC)

summary(AFC12, fit.measures=TRUE)
fitMeasures(AFC12)
semPaths(AFC12, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")

modindices(CFA12, sort = TRUE, maximum.number = 50)

standardizedSolution(CFA12, type = "std.all", se = TRUE, zstat = TRUE, 
                     pvalue = TRUE, ci = TRUE, level = 0.95, cov.std = TRUE, 
                     remove.eq = TRUE, remove.ineq = TRUE, remove.def = FALSE, 
                     partable = NULL, GLIST = NULL, est = NULL,
                     output = "data.frame")
lavResiduals(CFA12, type = "cor", custom.rmr = NULL,
             se = TRUE, zstat = TRUE, summary = TRUE, h1.acov = "unstructured",
             add.type = TRUE, add.labels = TRUE, add.class = TRUE,
             drop.list.single.group = TRUE,
             maximum.number = length(res.vech), output = "list")

#Modelo con 8 reactivos
DOSfactor<-'SP =~ B34.SE + B13.SE + B41.SE + B45.SE  
SF =~ B37.VS + B23.VS + B9.VS + B30.VS'

AFC8 <- cfa(DOSfactor,orthogonal=FALSE, estimator="MLM", data=AFC)

summary(AFC8, fit.measures=TRUE)
fitMeasures(AFC8)
semPaths(AFC8, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")"""

#METODO DE INVARIANZA DE MEDICION
#Modelo configuracional
cfa.config38 <- cfa(TREINTAYOCHOfactor, data = SAP, estimator = "MLM", group = "genero")
summary(cfa.config38, fit.measures = TRUE, standardized = TRUE)

cfa.config18 <- cfa(DIECIOCHOfactor, data = SAP, estimator = "MLM", group = "genero")
summary(cfa.config18, fit.measures = TRUE, standardized = TRUE)

cfa.config12 <- cfa(DOCEfactor, data = SAP, estimator = "MLM", group = "genero")
summary(cfa.config12, fit.measures = TRUE, standardized = TRUE)

cfa.config8 <- cfa(DOSfactor, data = SAP, estimator = "MLM", group = "salud")
summary(cfa.config8, fit.measures = TRUE, standardized = TRUE)

semPaths(cfa.config, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")

#Invarianza mÃ©trica - DEBIL
cfa.metric8 <- cfa(DOSfactor, data = SAP, estimator = "MLM", group = "salud", 
                   group.equal = "loadings")

cfa.metric12 <- cfa(DOCEfactor, data = SAP, estimator = "MLM", group = "genero", 
                    group.equal = "loadings")

cfa.metric18 <- cfa(DIECIOCHOfactor, data = SAP, estimator = "MLM", group = "genero", 
                    group.equal = "loadings")

cfa.metric38 <- cfa(TREINTAYOCHOfactor, data = SAP, estimator = "MLM", group = "genero", 
                    group.equal = "loadings")

#Comparacion de modelos (Modelo configuracional vs Modelo metrico)
compareFit(cfa.config8, cfa.metric8)
summary(compareFit(cfa.config8, cfa.metric8))

semPaths(cfa.metric, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")

#Invarianza escalar - FUERTE
cfa.scalar8 <- cfa(DOSfactor, data = SAP, estimator = "MLM", group = "salud", group.equal = c("loadings","intercepts"))

cfa.scalar12 <- cfa(DOCEfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts"))

cfa.scalar18 <- cfa(DIECIOCHOfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts"))

cfa.scalar38 <- cfa(TREINTAYOCHOfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts"))

#Comparacion de modelos
summary(compareFit(cfa.metric8, cfa.scalar8))

semPaths(cfa.scalar, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")

"""#Analizar que reactivos son contestados diferente entre grupos
lavTestScore(cfa.scalar)
parTable(cfa.scalar)"""

#Invarianza estricta
cfa.strict38 <- cfa(TREINTAYOCHOfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts", "residuals"))

cfa.strict18 <- cfa(DIECIOCHOfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts", "residuals"))

cfa.strict12 <- cfa(DOCEfactor, data = SAP, estimator = "MLM", group = "genero", group.equal = c("loadings","intercepts", "residuals"))

cfa.strict8 <- cfa(DOSfactor, data = SAP, estimator = "MLM", group = "salud", group.equal = c("loadings","intercepts", "residuals"))

summary(compareFit(cfa.scalar8, cfa.strict8))

semPaths(cfa.strict, intercepts = FALSE,
         edge.label.cex=1.5, 
         optimizeLatRes = TRUE, 
         groups = "lat",
         pastel = TRUE, 
         exoVar = FALSE, 
         sizeInt=5,
         edge.color ="black",
         esize = 6, 
         label.prop=2,
         sizeLat = 6,"std", 
         layout="circle")
